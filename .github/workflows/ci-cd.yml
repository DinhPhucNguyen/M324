name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install npm packages
        working-directory: ./frontend
        run: npm install

  build:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        working-directory: ./backend
        run: mvn clean package -DskipTests

  linting:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Backend Linting (Java)
        run: |
          ls -la ./backend
          mvn -f ./backend/pom.xml checkstyle:check

      - name: Frontend Linting (JavaScript/CSS)
        working-directory: ./frontend
        run: |
          npm install eslint eslint-config-prettier prettier stylelint stylelint-config-standard --save-dev
          npm run lint || true
          npm run lint:css || true

      - name: SQL Linting
        run: |
          pip install sqlfluff
          find ./backend/src/main/resources -name "*.sql" -type f -exec sqlfluff lint {} \;

  unittest:
    runs-on: ubuntu-latest
    needs: linting
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run Backend Unit Tests
        working-directory: ./backend
        run: mvn test -DexcludedGroups="integration"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Run Frontend Unit Tests
        working-directory: ./frontend
        run: |
          npm install
          npm test

  integrationtest:
    runs-on: ubuntu-latest
    needs: unittest
    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: chatapp
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run Backend Integration Tests
        working-directory: ./backend
        run: mvn verify -Pintegration-test || true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Validate Frontend
        working-directory: ./frontend
        run: |
          npm install
          echo "Frontend validation completed"

  deploy:
    runs-on: ubuntu-latest
    needs: integrationtest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t websocket_demo:latest ./backend

      - name: Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/websocket_demo:latest 