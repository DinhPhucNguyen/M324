name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: chatapp
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Build Docker image
      run: docker build -t websocket_demo:latest ./backend

    - name: Run tests
      run: mvn test

    - name: Push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/websocket_demo:latest
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Backend Linting (Java)
      run: |
        mvn checkstyle:check

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Frontend Linting (JavaScript/CSS)
      working-directory: ./frontend
      run: |
        npm install
        npm install eslint eslint-config-prettier prettier stylelint stylelint-config-standard --save-dev
        npm run lint || true
        npm run lint:css || true

    - name: SQL Linting
      run: |
        pip install sqlfluff
        find ./backend/src/main/resources -name "*.sql" -type f -exec sqlfluff lint {} \;

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run tests
        run: mvn test

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Backend Linting (Java)
        run: mvn checkstyle:check

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Frontend Linting (JavaScript/CSS)
        working-directory: ./frontend
        run: |
          npm install
          npm install eslint eslint-config-prettier prettier stylelint stylelint-config-standard --save-dev
          npm run lint || true
          npm run lint:css || true

      - name: SQL Linting
        run: |
          pip install sqlfluff
          find ./backend/src/main/resources -name "*.sql" -type f -exec sqlfluff lint {} \; 