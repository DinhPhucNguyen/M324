name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  jira-integration:
    name: Jira Integration
    runs-on: ubuntu-latest
    steps:
      - name: Login to Jira
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install npm packages
        working-directory: ./frontend
        run: |
          npm ci
          npm install --save-dev eslint eslint-config-prettier prettier stylelint stylelint-config-standard jest

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

      - name: Verify Docker Compose Installation
        run: docker-compose version

      - name: Install Loki Docker Plugin
        run: |
          docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions || true

  build:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build with Maven
        working-directory: ./backend
        run: mvn clean package -DskipTests

  linting:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Backend Linting (Java)
        run: mvn -f ./backend/pom.xml checkstyle:check

      - name: Frontend Linting (JavaScript/CSS)
        working-directory: ./frontend
        run: |
          npm
