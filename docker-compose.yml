version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/chatapp
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,metrics,prometheus
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - chat-network
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - chat-network
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
  db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=chatapp
    volumes:
      - ./DB/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - chat-network
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - chat-network
    depends_on:
      - prometheus
      - loki
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - chat-network
    depends_on:
      - backend
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
    networks:
      - chat-network

volumes:
  mysql_data:
  grafana_data:
  prometheus_data:
  loki_data:

networks:
  chat-network:
    driver: bridge 